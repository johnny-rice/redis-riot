/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2023 The RIOT authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
dependencies {
    api 'org.slf4j:slf4j-api'
    implementation 'org.slf4j:slf4j-simple'
    api group: 'info.picocli', name: 'picocli', version: picocliVersion
    annotationProcessor group: 'info.picocli', name: 'picocli-codegen', version: picocliVersion
    implementation 'org.springframework.boot:spring-boot'
    implementation group: 'me.tongfei', name: 'progressbar', version: progressbarVersion
    api group: 'com.redis', name: 'spring-batch-redis-infrastructure', version: springBatchRedisVersion
    testImplementation 'org.awaitility:awaitility'
}

compileJava {
    options.compilerArgs += ["-AprojectPath=${project.group}/${project.name}"]
}

if (!(project.findProperty('automatic.module.name.skip') ?: false).toBoolean()) {
    jar {
        manifest {
            attributes('Automatic-Module-Name': project.findProperty('automatic.module.name'))
        }
    }
}

project.rootProject.gradle.addBuildListener(new BuildAdapter() {
    @Override
    void projectsEvaluated(Gradle gradle) {
        gradle.rootProject.subprojects
            .find { p -> p.name == 'riot-core' }
            .processResources {
                inputs.property('build_date', gradle.rootProject.config.buildInfo.buildDate + ':' + gradle.rootProject.config.buildInfo.buildTime)
                filesMatching(['**/RiotVersion.properties']) {
                    expand(
                        'riot_version': gradle.rootProject.version,
                        'build_date': gradle.rootProject.config.buildInfo.buildDate,
                        'build_time': gradle.rootProject.config.buildInfo.buildTime,
                        'build_revision': gradle.rootProject.config.buildInfo.buildRevision
                    )
                }
            }
    }
})