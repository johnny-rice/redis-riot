/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2023 The RIOT authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'application'
    id 'org.jreleaser.jdks'
}

application {
    applicationName = 'riot'
    mainClass       = 'com.redis.riot.Riot'
}

jar {
    manifest {
        attributes([
            'Main-Class': 'com.redis.riot.Riot',
            'Automatic-Module-Name': project.findProperty('automatic.module.name')
        ])
    }
}

startScripts {
    classpath = files('$APP_HOME/lib/*')
}

dependencies {
    api(project(':riot-core')) {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    api project(':riot-file')
    api project(':riot-faker')
    api group: 'com.redis', name: 'spring-batch-redis-core', version: springBatchRedisVersion
    implementation group: 'org.latencyutils', name: 'LatencyUtils', version: latencyUtilsVersion
    implementation 'org.springframework.batch:spring-batch-infrastructure'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework:spring-jdbc'
    implementation 'com.zaxxer:HikariCP'
    implementation 'com.microsoft.sqlserver:mssql-jdbc'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'com.oracle.database.jdbc:ojdbc11'
    implementation 'org.postgresql:postgresql'
    testImplementation(project(':riot-test'))
    testImplementation group: 'com.redis', name: 'spring-batch-redis-test', version: springBatchRedisVersion
    testImplementation 'org.springframework.boot:spring-boot-starter-jdbc'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:oracle-xe'
    testImplementation 'org.hsqldb:hsqldb'
}

distributions {
    main {
        contents {
            from('../..') {
                include 'LICENSE'
                include 'VERSION'
            }
        }
    }
}

jdks {
    zulu21Linux {
        platform = 'linux-x86_64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-linux_x64.tar.gz'
        checksum = '5320a33714f58c0104191d244759daa6a6d46819d447347ba9003132e5489d92'
    }
    zulu21LinuxArm {
        platform = 'linux-aarch64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-linux_aarch64.tar.gz'
        checksum = '8bd387315620bb66a84945a51bcebb9016354b557c747e94d4837e68ea4077ec'
    }
    zulu21LinuxMusl {
        platform = 'linux_musl-x86_64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-linux_musl_x64.tar.gz'
        checksum = '8d383d47238b44361761edc9e169a215560009b15a0f8f56090583fc4b4709b6'
    }
    zulu21LinuxMuslArm {
        platform = 'linux_musl-aarch64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-linux_musl_aarch64.tar.gz'
        checksum = 'b4725425f48138c59e1ee53b59aa5217c5e4571b63d6a801af6809f1e74e95b9'
    }
    zulu21Windows {
        platform = 'windows-x86_64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-win_x64.zip'
        checksum = '8dea44fd3a6f7ad0f42f38abc1371075710b58bed9bd8f093c2ef2d450dd2672'
    }
    zulu21WindowsArm {
        platform = 'windows-aarch64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-win_aarch64.zip'
        checksum = 'f5ad7f539f74d12b6248c0fd9f4b416455dcf6803900b28e8d19054f3dcc6e98'
    }
    zulu21Osx {
        platform = 'osx-x86_64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-macosx_x64.zip'
        checksum = 'a77a9c67d8f9a2341674bcea7056d9d70f69ff0850dd3874303641cc9cec2dfc'
    }
    zulu21OsxArm {
        platform = 'osx-aarch64'
        url = 'https://cdn.azul.com/zulu/bin/zulu21.38.21-ca-jdk21.0.5-macosx_aarch64.zip'
        checksum = 'd5c289ce2c8c67f414ede3b170dea72ca9a1322520498325a51d83bbaa94d1f0'
    }
}


bootStartScripts.dependsOn jar

afterEvaluate {
    def copyJdksToCache = project.tasks.findByName('copyJdksToCache')
    ['zulu21Linux', 'zulu21LinuxArm', 'zulu21LinuxMusl', 'zulu21LinuxMuslArm',
     'zulu21Windows', 'zulu21WindowsArm', 'zulu21Osx', 'zulu21OsxArm'].each { jdk ->
        def copyTask = project.tasks.findByName('copyJdkFromCache' + jdk.capitalize())
        if (copyJdksToCache && copyTask) copyTask.dependsOn(copyJdksToCache)
    }
}

mainClassName = "com.redis.riot.Riot"

task copyRuntimeDependencies(type: Copy) {
    into "$buildDir/dependencies/flat"
    from configurations.runtimeClasspath
}

assemble.dependsOn(copyRuntimeDependencies)